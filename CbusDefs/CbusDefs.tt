<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>
<#
	var filename = Path.GetFullPath(this.Host.ResolvePath(@"..\cbusdefs.csv"));
	var text = File.ReadLines(filename);
	var regex = new Regex(@"^(\w+),(\w+)?,(\w+)?,(.*)?$");
	var data = new List<(string Type, string Name, string Value, string Comment)>();
	foreach (var line in text)
	{
		var matches = regex.Matches(line);
		if (matches.Count == 0) continue;
		var groups = matches[0];
		if (!groups.Success) continue;
		var type = groups.Groups[1].Value;
		var name = groups.Groups[2].Value;
		var value = groups.Groups[3].Value;
		var comment = groups.Groups[4].Value;
		data.Add((Type: type, Name: name, Value: value, Comment: comment));
	}

	var classNames =
		data.Select(n => n.Type)
			.Where(n => n != "comment")
			.Distinct()
			.OrderBy(n => n)
			.ToList();
#>
/* DO NOT EDIT THIS FILE.
 * This file is automatically generated from cbusdefs.csv
 */

namespace merg.cbus
{
<#
    foreach (var item in data.Where(n => n.Type == "comment"))
    { #>
    // <#= item.Comment #>
<#	}
#>

    public static class CbusDefs
    {
<#
	foreach (var className in classNames)
    {

#>
        /// <summary>
<#		foreach(var item in data.Where(n=>n.Type == className && string.IsNullOrEmpty(n.Name) && string.IsNullOrEmpty(n.Value) && !string.IsNullOrEmpty(n.Comment)))
        { #>
        /// <#= item.Comment #>
<#      } #>
        /// </summary>
        public static class <#= className #>
        {
<#
		foreach (var item in data.Where(n => n.Type == className && !string.IsNullOrEmpty(n.Name) && !string.IsNullOrEmpty(n.Value)))
        { #>

<#			if (!string.IsNullOrEmpty(item.Comment))
            { #>
            /// <summary>
            /// <#= item.Comment #>
            /// </summary>
<#			} #>
			public const int <#= item.Name #> = <#= item.Value #>;
<#		} #>
        }
<#	} #>
    }
}
